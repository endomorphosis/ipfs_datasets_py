# Dockerfile for MCP Dashboard
FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONFAULTHANDLER=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install first (for better Docker layer caching)
COPY requirements.txt requirements.txt
RUN pip install --no-cache-dir --trusted-host pypi.org --trusted-host files.pythonhosted.org -r requirements.txt

# Install additional dashboard dependencies
RUN pip install --no-cache-dir flask>=3.1.1 requests>=2.25.0

# Copy the entire project
COPY . .

# Install the package in development mode
RUN pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org -e .

# Create directories for data and logs
RUN mkdir -p /app/data /app/logs

# Health check for dashboard
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8899/api/mcp/status || exit 1

# Expose dashboard port
EXPOSE 8899

# Start the MCP dashboard
CMD ["python", "-m", "ipfs_datasets_py.mcp_dashboard"]

# Usage:
# 1. Build: docker build -f ipfs_datasets_py/mcp_server/Dockerfile.dashboard -t ipfs-datasets-dashboard .
# 2. Run: docker run -p 8899:8899 -e MCP_SERVER_HOST=host.docker.internal ipfs-datasets-dashboard